{
  "contractName": "CPDelegate",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CPDelegate.sol\":\"CPDelegate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CPDelegate.sol\":{\"keccak256\":\"0xa06f94136c66d4286f750c9795b49a51bd64c732897c1cbd6f5a0acdc4c23f0f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10c3d130f7eac4dd6f0c2b253b3f0cac23d14f2f38c4ae715b93b651b3db9de2\",\"dweb:/ipfs/QmP7Hr1iN8WFkSYaeDJ5EhyJEjUuF6BALZns8x8eVU4RLe\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bbba8bbcf39a33170bb2ce8464f1a0957eb14abb4e3f3ebb4c40ca324800053b64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220bbba8bbcf39a33170bb2ce8464f1a0957eb14abb4e3f3ebb4c40ca324800053b64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "565:151:28:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "565:151:28:-:0;;;;;",
  "source": "/**\n>>>> TO DO: Fundamental to the protcol is the capacity for CP to delegate part or all the requiremenets of the RfC \n    - The incentive not to take all offers and then delegate is a reputation-system based on a posterirri performance and quality feedback of each \n    delivere content + a minimum safety deposit that accrue close to exponentially hwne a CP takes all propositions (avoid monopolistic position and behaviors\n    on the content delivery service / the overall protocol...)\n**/\n\n// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\ncontract CPDelegate {\n\n    // >>>> THERE already even as an empty shell because being part in the design of the core logic of a the working protocol \n}",
  "sourcePath": "/home/w31rdm4ch1n3s/ConsenSys_dev_bootcamp/final_project/consensys_bootcamp_2021_minimum_viable_final_project/contracts/CPDelegate.sol",
  "ast": {
    "absolutePath": "project:/contracts/CPDelegate.sol",
    "exportedSymbols": {
      "CPDelegate": [
        4112
      ]
    },
    "id": 4113,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4111,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "540:23:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4112,
        "linearizedBaseContracts": [
          4112
        ],
        "name": "CPDelegate",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4113,
        "src": "565:151:28"
      }
    ],
    "src": "540:176:28"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CPDelegate.sol",
    "exportedSymbols": {
      "CPDelegate": [
        4112
      ]
    },
    "id": 4113,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4111,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "540:23:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4112,
        "linearizedBaseContracts": [
          4112
        ],
        "name": "CPDelegate",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4113,
        "src": "565:151:28"
      }
    ],
    "src": "540:176:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-02T17:26:08.577Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}