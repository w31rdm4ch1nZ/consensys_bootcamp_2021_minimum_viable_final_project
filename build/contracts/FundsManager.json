{
  "contractName": "FundsManager",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "contractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "setContractBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"setContractBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FundsManager.sol\":\"FundsManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/FundsManager.sol\":{\"keccak256\":\"0xa67eabba079f4b602cc991f27f605a8c0129df5e86b9541eb67d0669225214de\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://481a8a9168d807bc719380c13964672cf3984b33daa78c7ea1fc56efe8d780fd\",\"dweb:/ipfs/QmPDJYsZVV42DVVHgs7JmEodUaY3AWBbmJkH4MBau5e5gr\"]}},\"version\":1}",
  "bytecode": "0x60806040526002600160006101000a81548160ff02191690836002811115610050577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555034801561006157600080fd5b50610285806100716000396000f3fe6080604052600436106100385760003560e01c80633210520e146100aa5780636f9fb98a146100d35780638b7afe2e146100fe576100a8565b366100a8576000600160006101000a81548160ff02191690836002811115610089577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503460008082825461009f91906101a9565b92505081905550005b005b3480156100b657600080fd5b506100d160048036038101906100cc9190610156565b610129565b005b3480156100df57600080fd5b506100e8610133565b6040516100f5919061018e565b60405180910390f35b34801561010a57600080fd5b5061011361013b565b604051610120919061018e565b60405180910390f35b8060008190555050565b600047905090565b60005481565b60008135905061015081610238565b92915050565b60006020828403121561016857600080fd5b600061017684828501610141565b91505092915050565b610188816101ff565b82525050565b60006020820190506101a3600083018461017f565b92915050565b60006101b4826101ff565b91506101bf836101ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101f4576101f3610209565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610241816101ff565b811461024c57600080fd5b5056fea26469706673582212207bd44b1d4967fef9ec8215d364872b564794b17cd8d4ba74762a0954c4c38f2a64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80633210520e146100aa5780636f9fb98a146100d35780638b7afe2e146100fe576100a8565b366100a8576000600160006101000a81548160ff02191690836002811115610089577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503460008082825461009f91906101a9565b92505081905550005b005b3480156100b657600080fd5b506100d160048036038101906100cc9190610156565b610129565b005b3480156100df57600080fd5b506100e8610133565b6040516100f5919061018e565b60405180910390f35b34801561010a57600080fd5b5061011361013b565b604051610120919061018e565b60405180910390f35b8060008190555050565b600047905090565b60005481565b60008135905061015081610238565b92915050565b60006020828403121561016857600080fd5b600061017684828501610141565b91505092915050565b610188816101ff565b82525050565b60006020820190506101a3600083018461017f565b92915050565b60006101b4826101ff565b91506101bf836101ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101f4576101f3610209565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610241816101ff565b811461024c57600080fd5b5056fea26469706673582212207bd44b1d4967fef9ec8215d364872b564794b17cd8d4ba74762a0954c4c38f2a64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1477:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:2",
                "type": ""
              }
            ],
            "src": "7:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:2",
                "type": ""
              }
            ],
            "src": "152:262:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:2",
                "type": ""
              }
            ],
            "src": "420:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "642:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "652:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "664:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "660:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "652:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "732:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "745:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "756:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "741:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "741:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "688:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "688:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "688:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "614:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "626:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "637:4:2",
                "type": ""
              }
            ],
            "src": "544:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "816:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "826:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "849:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "831:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "831:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "826:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "860:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "883:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "865:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "865:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "860:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1023:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1025:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1025:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1025:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "944:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "951:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1019:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "947:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "941:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "938:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1055:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1066:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1069:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1062:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1055:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "803:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "806:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "812:3:2",
                "type": ""
              }
            ],
            "src": "772:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1128:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1138:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1149:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1138:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1120:7:2",
                "type": ""
              }
            ],
            "src": "1083:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1194:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1211:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1204:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1204:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1204:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1308:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1311:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1301:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1301:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1332:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1335:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1325:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1325:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1166:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1452:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1461:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1464:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1454:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1454:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1454:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1418:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1443:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1425:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1425:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1415:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1405:2:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1388:5:2",
                "type": ""
              }
            ],
            "src": "1352:122:2"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "209:1550:0:-:0;;;627:22;600:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;784:202;;;;;;;;;;209:1550;;;;;;",
  "deployedSourceMap": "209:1550:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:26;1635:8;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:9;1720:15;;:28;;;;;;;:::i;:::-;;;;;;;;209:1550;;;1458:84;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1041:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;238:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1458:84;1533:2;1515:15;:20;;;;1458:84;:::o;1041:100::-;1091:4;1113:21;1106:28;;1041:100;:::o;238:30::-;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:222::-;;675:2;664:9;660:18;652:26;;688:71;756:1;745:9;741:17;732:6;688:71;:::i;:::-;642:124;;;;:::o;772:305::-;;831:20;849:1;831:20;:::i;:::-;826:25;;865:20;883:1;865:20;:::i;:::-;860:25;;1019:1;951:66;947:74;944:1;941:81;938:2;;;1025:18;;:::i;:::-;938:2;1069:1;1066;1062:9;1055:16;;816:261;;;;:::o;1083:77::-;;1149:5;1138:16;;1128:32;;;:::o;1166:180::-;1214:77;1211:1;1204:88;1311:4;1308:1;1301:15;1335:4;1332:1;1325:15;1352:122;1425:24;1443:5;1425:24;:::i;:::-;1418:5;1415:35;1405:2;;1464:1;1461;1454:12;1405:2;1395:79;:::o",
  "source": "/*\n    just in its simplest form:\n        - want 1st to manage to send funds from Escrow contract to this contract (nothing fancier);\n\n*/\n\n// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\ncontract FundsManager {\n\n    uint256 public contractBalance;\n\n    //mapping (address => mapping (address => bool)) isInvestor;\n\n    enum ParticipantType {\n        isInvestor,\n        isContentProvider,\n        isUser\n    }\n\n    // value should be assigned in a function called specifcally and only in a context where the caller is an investor (send ether for a RfCid specified as input)\n    ParticipantType userType = ParticipantType.isUser;\n\n    modifier onlyInvestors{\n        require(userType == ParticipantType.isInvestor, \"has to be an investor\");\n        _;\n    }\n\n    constructor()  {\n        //test pre-game (to disappear)\n        \n        //Define roles of the pattern access control\n        // TO DO\n\n        //instantiates the other contracts\n        // TO DO\n\n    }\n\n    //Returns balance of InvestorEscrow contract\n    function getContractBalance() public view returns(uint){\n        return address(this).balance;\n    }\n\n    function manageInvestorsFunds() internal onlyInvestors {\n        //TO DO\n        //the usual require()\n        //add to FundsManager (could have a contract called Fund instantiated for more readability - more to think about)\n\n\n    }\n\n    //function sendInvestors() internal onlyProtocol {}\n\n    //test only\n    function setContractBalance(uint256 _x) public {\n        contractBalance = _x;\n    }\n\n    fallback() external payable {\n        \n    }\n\n    receive() external payable {\n        userType = ParticipantType.isInvestor;\n\n        //increment contract balance\n        contractBalance += msg.value;\n    }\n\n\n}",
  "sourcePath": "/home/w31rdm4ch1n3s/ConsenSys_dev_bootcamp/final_project/tests_repo_consensys_final_project/contracts/FundsManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/FundsManager.sol",
    "exportedSymbols": {
      "FundsManager": [
        75
      ]
    },
    "id": 76,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "184:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 75,
        "linearizedBaseContracts": [
          75
        ],
        "name": "FundsManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8b7afe2e",
            "id": 3,
            "mutability": "mutable",
            "name": "contractBalance",
            "nodeType": "VariableDeclaration",
            "scope": 75,
            "src": "238:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "238:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FundsManager.ParticipantType",
            "id": 7,
            "members": [
              {
                "id": 4,
                "name": "isInvestor",
                "nodeType": "EnumValue",
                "src": "372:10:0"
              },
              {
                "id": 5,
                "name": "isContentProvider",
                "nodeType": "EnumValue",
                "src": "392:17:0"
              },
              {
                "id": 6,
                "name": "isUser",
                "nodeType": "EnumValue",
                "src": "419:6:0"
              }
            ],
            "name": "ParticipantType",
            "nodeType": "EnumDefinition",
            "src": "341:90:0"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "userType",
            "nodeType": "VariableDeclaration",
            "scope": 75,
            "src": "600:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ParticipantType_$7",
              "typeString": "enum FundsManager.ParticipantType"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "ParticipantType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7,
                "src": "600:15:0"
              },
              "referencedDeclaration": 7,
              "src": "600:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ParticipantType_$7",
                "typeString": "enum FundsManager.ParticipantType"
              }
            },
            "value": {
              "expression": {
                "id": 10,
                "name": "ParticipantType",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7,
                "src": "627:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_ParticipantType_$7_$",
                  "typeString": "type(enum FundsManager.ParticipantType)"
                }
              },
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "isUser",
              "nodeType": "MemberAccess",
              "src": "627:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ParticipantType_$7",
                "typeString": "enum FundsManager.ParticipantType"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "678:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ParticipantType_$7",
                          "typeString": "enum FundsManager.ParticipantType"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15,
                          "name": "userType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "696:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ParticipantType_$7",
                            "typeString": "enum FundsManager.ParticipantType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 16,
                            "name": "ParticipantType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "708:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ParticipantType_$7_$",
                              "typeString": "type(enum FundsManager.ParticipantType)"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isInvestor",
                          "nodeType": "MemberAccess",
                          "src": "708:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ParticipantType_$7",
                            "typeString": "enum FundsManager.ParticipantType"
                          }
                        },
                        "src": "696:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "68617320746f20626520616e20696e766573746f72",
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "736:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_633933fff83bd16fe2ee94acb9af8d5540ff81307df338b112f919546f4a81a8",
                          "typeString": "literal_string \"has to be an investor\""
                        },
                        "value": "has to be an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_633933fff83bd16fe2ee94acb9af8d5540ff81307df338b112f919546f4a81a8",
                          "typeString": "literal_string \"has to be an investor\""
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "688:72:0"
                },
                {
                  "id": 22,
                  "nodeType": "PlaceholderStatement",
                  "src": "770:1:0"
                }
              ]
            },
            "id": 24,
            "name": "onlyInvestors",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:0"
            },
            "src": "656:122:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "799:187:0",
              "statements": []
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:0:0"
            },
            "scope": 75,
            "src": "784:202:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "1096:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1121:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FundsManager_$75",
                            "typeString": "contract FundsManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FundsManager_$75",
                            "typeString": "contract FundsManager"
                          }
                        ],
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1113:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1113:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "1106:28:0"
                }
              ]
            },
            "functionSelector": "6f9fb98a",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1068:2:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1091:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1090:6:0"
            },
            "scope": 75,
            "src": "1041:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "1202:177:0",
              "statements": []
            },
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 43,
                "modifierName": {
                  "id": 42,
                  "name": "onlyInvestors",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "1188:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1188:13:0"
              }
            ],
            "name": "manageInvestorsFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:0"
            },
            "scope": 75,
            "src": "1147:232:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1505:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1515:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1533:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1515:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:20:0"
                }
              ]
            },
            "functionSelector": "3210520e",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_x",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1486:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1485:12:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:0"
            },
            "scope": 75,
            "src": "1458:84:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "1576:16:0",
              "statements": []
            },
            "id": 60,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1576:0:0"
            },
            "scope": 75,
            "src": "1548:44:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1625:130:0",
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "userType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1635:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ParticipantType_$7",
                        "typeString": "enum FundsManager.ParticipantType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 64,
                        "name": "ParticipantType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1646:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ParticipantType_$7_$",
                          "typeString": "type(enum FundsManager.ParticipantType)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInvestor",
                      "nodeType": "MemberAccess",
                      "src": "1646:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ParticipantType_$7",
                        "typeString": "enum FundsManager.ParticipantType"
                      }
                    },
                    "src": "1635:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ParticipantType_$7",
                      "typeString": "enum FundsManager.ParticipantType"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:37:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1720:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 69,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1739:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1739:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1720:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:28:0"
                }
              ]
            },
            "id": 74,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:0"
            },
            "scope": 75,
            "src": "1598:157:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 76,
        "src": "209:1550:0"
      }
    ],
    "src": "184:1575:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FundsManager.sol",
    "exportedSymbols": {
      "FundsManager": [
        75
      ]
    },
    "id": 76,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "184:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 75,
        "linearizedBaseContracts": [
          75
        ],
        "name": "FundsManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8b7afe2e",
            "id": 3,
            "mutability": "mutable",
            "name": "contractBalance",
            "nodeType": "VariableDeclaration",
            "scope": 75,
            "src": "238:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "238:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FundsManager.ParticipantType",
            "id": 7,
            "members": [
              {
                "id": 4,
                "name": "isInvestor",
                "nodeType": "EnumValue",
                "src": "372:10:0"
              },
              {
                "id": 5,
                "name": "isContentProvider",
                "nodeType": "EnumValue",
                "src": "392:17:0"
              },
              {
                "id": 6,
                "name": "isUser",
                "nodeType": "EnumValue",
                "src": "419:6:0"
              }
            ],
            "name": "ParticipantType",
            "nodeType": "EnumDefinition",
            "src": "341:90:0"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "userType",
            "nodeType": "VariableDeclaration",
            "scope": 75,
            "src": "600:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ParticipantType_$7",
              "typeString": "enum FundsManager.ParticipantType"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "ParticipantType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7,
                "src": "600:15:0"
              },
              "referencedDeclaration": 7,
              "src": "600:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ParticipantType_$7",
                "typeString": "enum FundsManager.ParticipantType"
              }
            },
            "value": {
              "expression": {
                "id": 10,
                "name": "ParticipantType",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7,
                "src": "627:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_ParticipantType_$7_$",
                  "typeString": "type(enum FundsManager.ParticipantType)"
                }
              },
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "isUser",
              "nodeType": "MemberAccess",
              "src": "627:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ParticipantType_$7",
                "typeString": "enum FundsManager.ParticipantType"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "678:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ParticipantType_$7",
                          "typeString": "enum FundsManager.ParticipantType"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15,
                          "name": "userType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "696:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ParticipantType_$7",
                            "typeString": "enum FundsManager.ParticipantType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 16,
                            "name": "ParticipantType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "708:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ParticipantType_$7_$",
                              "typeString": "type(enum FundsManager.ParticipantType)"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "isInvestor",
                          "nodeType": "MemberAccess",
                          "src": "708:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ParticipantType_$7",
                            "typeString": "enum FundsManager.ParticipantType"
                          }
                        },
                        "src": "696:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "68617320746f20626520616e20696e766573746f72",
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "736:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_633933fff83bd16fe2ee94acb9af8d5540ff81307df338b112f919546f4a81a8",
                          "typeString": "literal_string \"has to be an investor\""
                        },
                        "value": "has to be an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_633933fff83bd16fe2ee94acb9af8d5540ff81307df338b112f919546f4a81a8",
                          "typeString": "literal_string \"has to be an investor\""
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "688:72:0"
                },
                {
                  "id": 22,
                  "nodeType": "PlaceholderStatement",
                  "src": "770:1:0"
                }
              ]
            },
            "id": 24,
            "name": "onlyInvestors",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:0"
            },
            "src": "656:122:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "799:187:0",
              "statements": []
            },
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:0:0"
            },
            "scope": 75,
            "src": "784:202:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "1096:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 35,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1121:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FundsManager_$75",
                            "typeString": "contract FundsManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FundsManager_$75",
                            "typeString": "contract FundsManager"
                          }
                        ],
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1113:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1113:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "1106:28:0"
                }
              ]
            },
            "functionSelector": "6f9fb98a",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1068:2:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "1091:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1090:6:0"
            },
            "scope": 75,
            "src": "1041:100:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "1202:177:0",
              "statements": []
            },
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 43,
                "modifierName": {
                  "id": 42,
                  "name": "onlyInvestors",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "1188:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1188:13:0"
              }
            ],
            "name": "manageInvestorsFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:0"
            },
            "scope": 75,
            "src": "1147:232:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1505:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1515:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1533:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1515:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:20:0"
                }
              ]
            },
            "functionSelector": "3210520e",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_x",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1486:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1485:12:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:0"
            },
            "scope": 75,
            "src": "1458:84:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "1576:16:0",
              "statements": []
            },
            "id": 60,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:2:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1576:0:0"
            },
            "scope": 75,
            "src": "1548:44:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1625:130:0",
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "userType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1635:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ParticipantType_$7",
                        "typeString": "enum FundsManager.ParticipantType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 64,
                        "name": "ParticipantType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1646:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ParticipantType_$7_$",
                          "typeString": "type(enum FundsManager.ParticipantType)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "isInvestor",
                      "nodeType": "MemberAccess",
                      "src": "1646:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ParticipantType_$7",
                        "typeString": "enum FundsManager.ParticipantType"
                      }
                    },
                    "src": "1635:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ParticipantType_$7",
                      "typeString": "enum FundsManager.ParticipantType"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:37:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "contractBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1720:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 69,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1739:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1739:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1720:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:28:0"
                }
              ]
            },
            "id": 74,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:0"
            },
            "scope": 75,
            "src": "1598:157:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 76,
        "src": "209:1550:0"
      }
    ],
    "src": "184:1575:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1641744938476": {
      "events": {},
      "links": {},
      "address": "0xF3d95fd69e0De43d17f2709cc0FeaA3c44f16079",
      "transactionHash": "0x162d02eda82a03f3afbf6ab56fa342a865de6682d96ff12a386b0afa6a82feeb"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-09T17:01:43.623Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}