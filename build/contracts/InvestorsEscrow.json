{
  "contractName": "InvestorsEscrow",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rfc",
          "type": "uint256"
        }
      ],
      "name": "DepositForProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_matureTime",
          "type": "uint256"
        }
      ],
      "name": "Escrowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_mintedRfC",
          "type": "address"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bool",
          "name": "allowanceUserValidation",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountDAI",
          "type": "uint256"
        }
      ],
      "name": "ProtocolAllowed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MIN_ESCROW_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceInvestorsPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInvestor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "participant",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "protocolUserWithdrawAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rfcId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userHasADeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userProtocolWithdrawAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rfc\",\"type\":\"uint256\"}],\"name\":\"DepositForProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_matureTime\",\"type\":\"uint256\"}],\"name\":\"Escrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_mintedRfC\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"allowanceUserValidation\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountDAI\",\"type\":\"uint256\"}],\"name\":\"ProtocolAllowed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_ESCROW_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceInvestorsPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInvestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"participant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"protocolUserWithdrawAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rfcId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userHasADeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userProtocolWithdrawAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/InvestorEscrow.sol\":\"InvestorsEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/InvestorEscrow.sol\":{\"keccak256\":\"0x028453ffe0b54512ce6aca5678a723ef5670ec02beaf8f8181a8e671b06faa36\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://73bd98892dcb59316c3b2df015fd305cfd43f0d5e96c6a6b4712d8f37ae15e7e\",\"dweb:/ipfs/QmYdmdntxTavCt4sXcLK1vxenLv76GksZSi6LvCFv9brGT\"]}},\"version\":1}",
  "bytecode": "0x60a060405262278d0060809081525034801561001a57600080fd5b50608051610822610036600039600061030f01526108226000f3fe6080604052600436106100a75760003560e01c8063aa8c217c11610064578063aa8c217c146101e4578063b6dfc2051461020f578063cee2a9cf1461024c578063d0e30db014610289578063dd62ed3e14610293578063e3d670d7146102d0576100a7565b806312580d80146100ac57806337a6d42b146100d757806346ed37351461010257806349ef18f81461013f57806373eb21c51461017c578063a11f2bb6146101a7575b600080fd5b3480156100b857600080fd5b506100c161030d565b6040516100ce9190610579565b60405180910390f35b3480156100e357600080fd5b506100ec610331565b6040516100f991906105d5565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610621565b610357565b6040516101369190610669565b60405180910390f35b34801561014b57600080fd5b5061016660048036038101906101619190610621565b610377565b6040516101739190610669565b60405180910390f35b34801561018857600080fd5b50610191610397565b60405161019e9190610579565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190610621565b61039d565b6040516101db9190610669565b60405180910390f35b3480156101f057600080fd5b506101f96103bd565b6040516102069190610579565b60405180910390f35b34801561021b57600080fd5b5061023660048036038101906102319190610621565b6103c3565b6040516102439190610579565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190610621565b6103db565b6040516102809190610669565b60405180910390f35b6102916103fb565b005b34801561029f57600080fd5b506102ba60048036038101906102b59190610684565b610523565b6040516102c79190610579565b60405180910390f35b3480156102dc57600080fd5b506102f760048036038101906102f29190610621565b610548565b6040516103049190610579565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915054906101000a900460ff1681565b600b6020528060005260406000206000915054906101000a900460ff1681565b600a5481565b600d6020528060005260406000206000915054906101000a900460ff1681565b60085481565b60046020528060005260406000206000915090505481565b60096020528060005260406000206000915054906101000a900460ff1681565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610747565b60405180910390fd5b34600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104cc9190610796565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516105199190610579565b60405180910390a2565b6002602052816000526040600020602052806000526040600020600091509150505481565b60036020528060005260406000206000915090505481565b6000819050919050565b61057381610560565b82525050565b600060208201905061058e600083018461056a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105bf82610594565b9050919050565b6105cf816105b4565b82525050565b60006020820190506105ea60008301846105c6565b92915050565b600080fd5b6105fe816105b4565b811461060957600080fd5b50565b60008135905061061b816105f5565b92915050565b600060208284031215610637576106366105f0565b5b60006106458482850161060c565b91505092915050565b60008115159050919050565b6106638161064e565b82525050565b600060208201905061067e600083018461065a565b92915050565b6000806040838503121561069b5761069a6105f0565b5b60006106a98582860161060c565b92505060206106ba8582860161060c565b9150509250929050565b600082825260208201905092915050565b7f7573657220646f65736e2774206861766520656d6f7567682066756e6473203d60008201527f3e20726576657274000000000000000000000000000000000000000000000000602082015250565b60006107316028836106c4565b915061073c826106d5565b604082019050919050565b6000602082019050818103600083015261076081610724565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107a182610560565b91506107ac83610560565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107e1576107e0610767565b5b82820190509291505056fea2646970667358221220e00d43c6900d02a9bc42c22ffd67af6512918c6964df63e627b322fa219c384164736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c8063aa8c217c11610064578063aa8c217c146101e4578063b6dfc2051461020f578063cee2a9cf1461024c578063d0e30db014610289578063dd62ed3e14610293578063e3d670d7146102d0576100a7565b806312580d80146100ac57806337a6d42b146100d757806346ed37351461010257806349ef18f81461013f57806373eb21c51461017c578063a11f2bb6146101a7575b600080fd5b3480156100b857600080fd5b506100c161030d565b6040516100ce9190610579565b60405180910390f35b3480156100e357600080fd5b506100ec610331565b6040516100f991906105d5565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610621565b610357565b6040516101369190610669565b60405180910390f35b34801561014b57600080fd5b5061016660048036038101906101619190610621565b610377565b6040516101739190610669565b60405180910390f35b34801561018857600080fd5b50610191610397565b60405161019e9190610579565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190610621565b61039d565b6040516101db9190610669565b60405180910390f35b3480156101f057600080fd5b506101f96103bd565b6040516102069190610579565b60405180910390f35b34801561021b57600080fd5b5061023660048036038101906102319190610621565b6103c3565b6040516102439190610579565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190610621565b6103db565b6040516102809190610669565b60405180910390f35b6102916103fb565b005b34801561029f57600080fd5b506102ba60048036038101906102b59190610684565b610523565b6040516102c79190610579565b60405180910390f35b3480156102dc57600080fd5b506102f760048036038101906102f29190610621565b610548565b6040516103049190610579565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915054906101000a900460ff1681565b600b6020528060005260406000206000915054906101000a900460ff1681565b600a5481565b600d6020528060005260406000206000915054906101000a900460ff1681565b60085481565b60046020528060005260406000206000915090505481565b60096020528060005260406000206000915054906101000a900460ff1681565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610747565b60405180910390fd5b34600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104cc9190610796565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516105199190610579565b60405180910390a2565b6002602052816000526040600020602052806000526040600020600091509150505481565b60036020528060005260406000206000915090505481565b6000819050919050565b61057381610560565b82525050565b600060208201905061058e600083018461056a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105bf82610594565b9050919050565b6105cf816105b4565b82525050565b60006020820190506105ea60008301846105c6565b92915050565b600080fd5b6105fe816105b4565b811461060957600080fd5b50565b60008135905061061b816105f5565b92915050565b600060208284031215610637576106366105f0565b5b60006106458482850161060c565b91505092915050565b60008115159050919050565b6106638161064e565b82525050565b600060208201905061067e600083018461065a565b92915050565b6000806040838503121561069b5761069a6105f0565b5b60006106a98582860161060c565b92505060206106ba8582860161060c565b9150509250929050565b600082825260208201905092915050565b7f7573657220646f65736e2774206861766520656d6f7567682066756e6473203d60008201527f3e20726576657274000000000000000000000000000000000000000000000000602082015250565b60006107316028836106c4565b915061073c826106d5565b604082019050919050565b6000602082019050818103600083015261076081610724565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107a182610560565b91506107ac83610560565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107e1576107e0610767565b5b82820190509291505056fea2646970667358221220e00d43c6900d02a9bc42c22ffd67af6512918c6964df63e627b322fa219c384164736f6c634300080b0033",
  "immutableReferences": {
    "4": [
      {
        "length": 32,
        "start": 783
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4569:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:2",
                "type": ""
              }
            ],
            "src": "90:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:2",
                "type": ""
              }
            ],
            "src": "214:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "487:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "497:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "512:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "519:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "508:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "497:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "469:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "479:7:2",
                "type": ""
              }
            ],
            "src": "442:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "619:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "629:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "658:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "640:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "629:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "601:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "611:7:2",
                "type": ""
              }
            ],
            "src": "574:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "758:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "781:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "763:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "763:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "751:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "729:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "736:3:2",
                "type": ""
              }
            ],
            "src": "676:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "908:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "920:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "931:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "916:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "908:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "988:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1001:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1012:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "944:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "944:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "944:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "870:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "882:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "893:4:2",
                "type": ""
              }
            ],
            "src": "800:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1068:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1078:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1094:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1088:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1088:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1078:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1061:6:2",
                "type": ""
              }
            ],
            "src": "1028:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1198:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1215:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1218:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1208:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1208:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1109:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1321:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1338:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1331:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1331:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1232:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1455:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1464:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1467:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1457:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1457:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1457:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1421:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1446:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1428:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1428:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1418:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1411:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1411:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1408:63:2"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1391:5:2",
                "type": ""
              }
            ],
            "src": "1355:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1535:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1545:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1567:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1554:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1554:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1545:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1610:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1583:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1583:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1583:33:2"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1513:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1521:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1529:5:2",
                "type": ""
              }
            ],
            "src": "1483:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1694:263:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1740:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1742:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1742:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1742:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1715:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1724:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1711:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1711:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1736:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1707:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "1704:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1833:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1848:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1862:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1852:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1877:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1912:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1923:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1908:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1908:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1932:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1887:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1887:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1877:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1664:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1675:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1687:6:2",
                "type": ""
              }
            ],
            "src": "1628:329:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2005:48:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2015:32:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2040:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2033:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:13:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2026:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:21:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2015:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1987:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1997:7:2",
                "type": ""
              }
            ],
            "src": "1963:90:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2118:50:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2135:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2155:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2140:14:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2140:21:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2128:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:34:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2128:34:2"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2106:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2113:3:2",
                "type": ""
              }
            ],
            "src": "2059:109:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2266:118:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2276:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2288:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2299:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2284:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2284:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2276:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2350:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2363:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2374:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2359:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2359:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2312:37:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2312:65:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2312:65:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2238:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2250:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2261:4:2",
                "type": ""
              }
            ],
            "src": "2174:210:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2473:391:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2519:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2521:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2521:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2521:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2494:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2503:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2490:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2490:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2515:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2486:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2486:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2483:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2612:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2627:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2641:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2631:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2656:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2691:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2702:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2687:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2687:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2711:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2666:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2666:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2656:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2739:118:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2754:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2768:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2758:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2784:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2819:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2830:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2815:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2815:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2839:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2794:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2794:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2784:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2435:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2446:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2458:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2466:6:2",
                "type": ""
              }
            ],
            "src": "2390:474:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2966:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2983:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2988:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2976:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2976:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2976:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3004:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3023:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3028:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3019:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3004:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2938:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2943:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2954:11:2",
                "type": ""
              }
            ],
            "src": "2870:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3151:121:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3173:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3181:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3169:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3169:14:2"
                      },
                      {
                        "hexValue": "7573657220646f65736e2774206861766520656d6f7567682066756e6473203d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3185:34:2",
                        "type": "",
                        "value": "user doesn't have emough funds ="
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3162:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3162:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3162:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3241:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3249:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3237:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3237:15:2"
                      },
                      {
                        "hexValue": "3e20726576657274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3254:10:2",
                        "type": "",
                        "value": "> revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3230:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3230:35:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3230:35:2"
                }
              ]
            },
            "name": "store_literal_in_memory_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3143:6:2",
                "type": ""
              }
            ],
            "src": "3045:227:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3424:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3434:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3500:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3505:2:2",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3441:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3441:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3434:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3606:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21",
                      "nodeType": "YulIdentifier",
                      "src": "3517:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3517:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3630:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3635:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3626:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3619:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3412:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3420:3:2",
                "type": ""
              }
            ],
            "src": "3278:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3821:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3831:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3843:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3854:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3839:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3831:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3878:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3889:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3874:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3874:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3897:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3903:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3893:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3893:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3867:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3867:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3867:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3923:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4057:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3931:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3931:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3923:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3801:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3816:4:2",
                "type": ""
              }
            ],
            "src": "3650:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4103:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4120:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4123:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4113:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4113:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4113:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4217:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4220:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4210:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4210:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4210:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4241:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4244:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4234:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4234:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4075:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4305:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4315:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4338:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4320:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4320:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4315:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4349:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4372:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4354:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4354:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4349:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4512:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4514:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4514:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4514:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4433:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4440:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4508:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4436:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4436:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4430:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4430:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4427:107:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4544:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4555:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4558:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4551:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4551:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4544:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4292:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4295:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4301:3:2",
                "type": ""
              }
            ],
            "src": "4261:305:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21(memPtr) {\n\n        mstore(add(memPtr, 0), \"user doesn't have emough funds =\")\n\n        mstore(add(memPtr, 32), \"> revert\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "448:17726:0:-:0;;;1918:7;1875:50;;;;;448:17726;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "448:17726:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:50;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2299:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4441:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4302:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4932:66;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3049:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2836:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3077:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6024:663;;;:::i;:::-;;2457:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2525:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1875:50;;;:::o;2299:26::-;;;;;;;;;;;;;:::o;4441:66::-;;;;;;;;;;;;;;;;;;;;;;:::o;4302:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;3810:20::-;;;;:::o;4932:66::-;;;;;;;;;;;;;;;;;;;;;;:::o;3049:21::-;;;;:::o;2836:56::-;;;;;;;;;;;;;;;;;:::o;3077:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;6024:663::-;6297:9;6274:7;:19;6282:10;6274:19;;;;;;;;;;;;;;;;:32;;6266:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6388:9;6362:7;:22;6378:4;6362:22;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;6574:10;6566:30;;;6586:9;6566:30;;;;;;:::i;:::-;;;;;;;;6024:663::o;2457:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2525:43::-;;;;;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:90::-;1997:7;2040:5;2033:13;2026:21;2015:32;;1963:90;;;:::o;2059:109::-;2140:21;2155:5;2140:21;:::i;:::-;2135:3;2128:34;2059:109;;:::o;2174:210::-;2261:4;2299:2;2288:9;2284:18;2276:26;;2312:65;2374:1;2363:9;2359:17;2350:6;2312:65;:::i;:::-;2174:210;;;;:::o;2390:474::-;2458:6;2466;2515:2;2503:9;2494:7;2490:23;2486:32;2483:119;;;2521:79;;:::i;:::-;2483:119;2641:1;2666:53;2711:7;2702:6;2691:9;2687:22;2666:53;:::i;:::-;2656:63;;2612:117;2768:2;2794:53;2839:7;2830:6;2819:9;2815:22;2794:53;:::i;:::-;2784:63;;2739:118;2390:474;;;;;:::o;2870:169::-;2954:11;2988:6;2983:3;2976:19;3028:4;3023:3;3019:14;3004:29;;2870:169;;;;:::o;3045:227::-;3185:34;3181:1;3173:6;3169:14;3162:58;3254:10;3249:2;3241:6;3237:15;3230:35;3045:227;:::o;3278:366::-;3420:3;3441:67;3505:2;3500:3;3441:67;:::i;:::-;3434:74;;3517:93;3606:3;3517:93;:::i;:::-;3635:2;3630:3;3626:12;3619:19;;3278:366;;;:::o;3650:419::-;3816:4;3854:2;3843:9;3839:18;3831:26;;3903:9;3897:4;3893:20;3889:1;3878:9;3874:17;3867:47;3931:131;4057:4;3931:131;:::i;:::-;3923:139;;3650:419;;;:::o;4075:180::-;4123:77;4120:1;4113:88;4220:4;4217:1;4210:15;4244:4;4241:1;4234:15;4261:305;4301:3;4320:20;4338:1;4320:20;:::i;:::-;4315:25;;4354:20;4372:1;4354:20;:::i;:::-;4349:25;;4508:1;4440:66;4436:74;4433:1;4430:81;4427:107;;;4514:18;;:::i;:::-;4427:107;4558:1;4555;4551:9;4544:16;;4261:305;;;;:::o",
  "source": "//in an attempt to refactor FundsManager code in a way that should help understanding it, preventing impacts in case of any bugs by astracting away\n// the logic of the Protocol controlled value from the logic with which users can interact directly\n\n// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.0;\n\n//import '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n//import '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\n\n\ncontract InvestorsEscrow {\n    //>>as I will limit my use in this contract to ether, maybe it is not useful - but surely it will for the core contracts such as FundsManager\n    //using SafeERC20 for IERC20;\n    \n    /*>>>>> MAKING SURE THIS ESCROW CONTRACT CALLS AND IS CALLED ONLY BY THE ACTUAL INSTANCES OF OUR PROTOCOL's CONTRACT:\n            address public immutable FundsManagerCore = \"{address of the contract acting as PCV and all content related >>funding<< logic}\"; \n     <<<<<<\n    */\n\n    //a hold (to prevent abuses, spamming the CPs/participants) of 30 days on every deposit that initiates \n    // a proposal (on which can be made some yield profit)\n    //  => won't affect users wanting to access content (and pay for it).\n    \n    // This constant is used for the proposal phase Investor transaction (another is used with a different time value, part of the RfC itself, for all other txs). \n    //  How do you target those transactions?:\n    //  - RfCProposal\n    //  - RfCCommitFunds (like a staking contract where investors stake some funds to signal both their interest in the RfC and the intensity of their interest\n    //      with the amount they are willing to commit - one caveat that I want to prevent is that the shares in the RfC are eventually maipulable or\n    //      subject to be defined by monopoly power. So I decide to define the shares on a content a la \"quadratic voting\")\n    //  - ...\n    uint256 public immutable MIN_ESCROW_TIME = 30 days; //check for how to set a duration/expiration time, etc.\n\n    // RequestForContent public RfC;\n    uint256 RfCId;\n\n    //a value that says when a RfC is passes the proposal round and is now in \"processing\" (by a CP) status:\n    //  => this value should be returned to this contract by the contract implementing the proposal logic\n    // bool public hasPassed = false;\n\n    address public participant;\n\n    //get an investor the authorization to the protocol to use a certain amount \n    // (the amount the user-investor sent) \n    mapping(address => mapping(address => uint)) public allowance;\n\n    mapping (address => uint256) public balance;\n\n    //just want to be able to have a get function to query balance investors related to a RfC ID for the user \n    //  to have access to this information => could be a uint returned before funds are pulled by FundsManager\n    //  contract for a specific RfC id\n    mapping (address => uint256) public balanceInvestorsPool;\n\n    uint256 investorFundsPooled;\n\n    uint256 investorPoolShare;\n\n    uint256 PoolId; // which will be the same as an RfCId, so choose one of those \n\n    uint256 public amount;\n\n    mapping (address => bool) public isInvestor;\n\n    //initialized only if RfC is passed\n    struct RfCBalance {\n        uint256 RfCId; \n        uint256 amountRfC;\n        uint256 time;       //not sure needed => would record the amount of funding for an RfC at a given time\n    }\n\n    // RfC proposition exists under the form of a dynamic array built through the frontend. It is not a token minted as I don't want individuals\n    //  to have to pay for minting a proposal - think of my use case for a \"crowdjournalism\" application.\n    //      => maybe for now, keep the generic aspect, and just mint the token... (you can think of the specific use case of crowdjournalism for\n    //      the next iteration)\n    //RfC public rfc;\n    uint256 public rfcId;\n\n    //specific to this contract is the matureTime - if in the context of a proposition, then matureTime should be of RfC proposal to CPs phase\n    // minimum/standard (for now) duration + a hold (to prevent abuses, spamming the CPs/participants) of 30 days hold on it (on which can be made some yield profit - TBD if \n    // those go to the procotol only, or some are given back to the user initiating a proposal) => matureTime moved to RfCProposal contract.\n    \n\n    mapping (address => bool) public userHasADeposit;\n\n    //keep track of the authorization by users for the protocol to uise their funds\n    mapping (address => bool) public userProtocolWithdrawAuthorization;\n\n    //\"Protocol allowing\" users to withdraw their funds, according to different conditions to be satisfied, depending on the role the user is playing at a certain \n    // time and under certain conditions => the controls are hendled on the Protocol contracts side, not here. Here, we have a state variable (that is set\n    // on the protocol side) from which we can infer an authorization to withdraw funds for a user\n    mapping (address => bool) public protocolUserWithdrawAuthorization;\n\n    //events\n\n    event Deposit(address indexed _from, uint _value);\n    event Escrowed(address _from, address _to, uint256 _amount, uint256 _matureTime);\n\n    event ProtocolAllowed(bool indexed allowanceUserValidation, uint amountDAI);\n\n    event Initialized(address _mintedRfC);\n\n    event DepositForProposal(address depositor, uint256 proposalId, uint256 rfc);\n    /*\n    constructor(){\n        //Check Permissions pattern in the FEI protocol code\n        _setContractAdminRole(keccak256(\"INVESTORESCROW_ADMIN_ROLE\"));  // a multisg-wallet with 1 3rd \n                                                                        // controlled by previous users of the protocol\n    }\n    */\n\n    //receive funds from users wanting to particpate to the content market making protocol \n    // => likely better to have a specific deposit function for each\n    //  investor's use case (that then they can call from the web UI, making sure they do \n    //  knowingly sen their funds for a specific action in the protocol)\n    \n    function deposit() public payable {\n        //require(msg.sender == WETH, \"only Eth or Weth fallback to eth contract\"); //WETH works for us as Uniswap uses it anyway for our swap\n        //userHasADeposit[msg.sender] = true;\n       \n\n        require(balance[msg.sender] >= msg.value, \"user doesn't have emough funds => revert\");\n\n        balance[address(this)] += msg.value;\n        \n        //call a function defined either in this contract as \"internal\" call, or in the FundsManager contract\n        //_lockFunds(msg.sender);\n\n        emit Deposit(msg.sender, msg.value);\n        \n        //emit Escrowed(msg.sender, adress(this), msg.value, _matureTime);\n    }\n    \n  \n\n    // //function where users give approval to the FundsManager contract to withdraw their funds from this escrow\n    // // contract => spender = FundsManager contract address on your testnet - make sure it can only authorizes\n    // // the actual instance of your contract (through authorization roles pattern defined in the AccessControl \n    // // contract)\n    // function _approve(address owner/*,address spender, uint256 value*/) private {\n\n    //     //value = msg.value;\n\n    //     //owner is the role defined by us having rights on this contract (admin of the escrow for pausing emergency,\n    //     //  or emergency transfer of the funds, ..? => it should be a multi-sig contract, where at least one of\n    //     //  the required key is another contract controlled by some of the investors (a few of them\n    //     //  are assigned randomly this role, done each time for a new RfC => TO DO: next iteration, where I'll go deeper\n    //     // in multi-sig control over EOA and contracts, and how to compose with it))\n\n    //     require(owner == INVESTORESCROW_ADMIN_ROLE);    // make sure only FundsManager can be allowed to \n    //                                                     // manage the funds.\n\n    //     //owner is a multi-sig contract, that can send the funds to the spender (see where the value is accessed\n    //     //  maybe again in FundsManager), our FundsManager contract:\n    //     // spender is actually assigned inside the FundsManager contract as address(this), where this function \n    //     //  is defined:\n    //     _safeTransfer(owner, value);\n        \n    //     setApprovalForAll(operator, true);\n    // }\n\n    // /** \n    // function transferFrom(address from, address to, uint value) external returns (bool) {\n    //     if (allowance[from][msg.sender] != uint(-1)) {\n    //         allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n    //     }\n    //     _transfer(from, to, value);\n    //     return true;\n    // }\n    // **/\n\n    // function lockFunds(address investor, uint256 _timeMaturity) internal {\n    //     //Check pattern usually used for this purpose (as a resting time before actual unstaking happeing for instance)\n    // }\n\n    // function depositForRfCProposal(RfCProposal _rfcProposal,uint256 _RfCProposalID) public {\n    //     require(isInitiated[_RfCProposalID] != true, \"Is already in proposal phase\");    // might add the case where an exact same proposal \n    //                                                                                     //  (so all proposal would be kept in a special RfCPrposalEscrow contract)\n    //                                                                                     // can't be reproposed as is => give it some thinking....?\n    //     emit DepositForProposal(msg.sender, proposalId, rfcId);\n    // }\n\n    // //function in which is called (or implemented in) a quadratic voting function + assign Investor role to the user + add sent amount to escrow balance\n    // // to be withdrawn by the Protocol FundsManager core contract\n    // //>>>>>>>>FOR NOW, V2\n    // function depositForRfCInvestorValidation() public payable returns (hasPassed, RfCId){\n    //     //TO DO (V2, or once you've done the minimal mechanics)\n        \n    //     //require\n\n    //     //set role\n    //     //isInvestor[msg.sender] = true;\n\n    //     //set authorization for FundsManager contract to withdraw the funds\n\n    //         // => Once added to the investor Pool, in FundsManager contract, it triggers a call to mint a (dynamic) NFT representing the share of the investor in the pool\n\n    //     // \n\n    // }\n\n    // function depositPayAccessContent(uint256 _RfCId, uint256 _amount) external {\n    //     //as investors have shares to a content they produce (that they can eventually sell to other users,\n    //     //  but that will change their status back ti users, or RfCIdInvestor = false), they \n    //     //  will call another function to access content, if needed, that encodes the logic of their shares\n    //     //  in the content, etc. \n    //     require(msg.sender != Investor, \"investors in this RfC should access this content through their dashboard\");\n\n    //     //should return a token that gives them all data/authorization to access content\n    // } \n\n    // //Specific to CPs answering to a proposal, to manifest their interest in producing/creating this content.\n    // // It interacts with a reverse auction contract that\n    // //  itself is meant to achieve in the best (trustless and efficient trade-off acceptable) possible way \n    // //  the coordination between investors and CPs.\n    // //      => solve this pb now: how investors and CPs \"agree\"/coordinate on the funding amount \n    // //  for a given RfC?:\n\n    // /** \n    //     >>>>>>>>\n    //     IMPORTANT TO NOTE: AT THIS POINT, I HAVE NOT FORMULATED ANYTHING THAT WOULD RULE OUT FROM MY\n    //     PROPOSAL ROUND AND THE QUADRATIC VOTING  A SIMPLE SYBIL ATTACK (multiple account owned by one entity)\n    //         => it would require something like Proof of humanity od a DID service.\n    //     <<<<<<<< \n        \n    //     - 1 possibility (complex I think... as I don't think, of any other way than doing it through \n    //     some sort of zk-proof scheme -> could search if \"simple\" implementation of that for a vote on the web?): \n    //         -> a sort of \"silent reverse auction\" where the CPs don't know the max amount investors are ready \n    //         to commit for one RfC, and the investors don't know the min amount for which CPs are ready to accept \n    //         to commit to deliver the Content/Product.\n    //             => what would be precisely this mechanism?\n    //                 - each participants commits a max investment amount they commit to put under escrow (but don't do yet so it stays secret, but also\n    //                     that have to force them to then commit for the minEscrowTime if the outcome is a miss);\n    //                 - each willing Content Provider commits a min amount for which they would accept to create and distribute/make accessible the content;\n    //                     => an auction mechanism starts with a minimum amount publicly defined in the RfCProposal where investors can \"enter\" multiple times/\n    //                     signal their interest (canceling the previous bid with the highest at a given time - they have the possibility to\n    //                     predetermine their maximum and so the auction goes for the remaining investors and the CPs), and the CPs can choose to commit\n    //                     to an amount, which in our proptocol binds them to deliver the content and be rewarded for it, or being punished by losing part or all of their \n    //                     escrowed funds.  \n    //             => how to implement such a mechanism? (cf. https://eprint.iacr.org/2018/704.pdf for most of the elements defined fromally in pseudo-code)\n\n    //                 => I actually might be able to implement a quadratic voting and secret auction as I want with the AztecProtocol SDK:\n    //                 https://docs.aztecprotocol.com/#/Introduction\n\n    //                 Now maybe I'll keep that part for the iteration 2.\n    //                 It could mean 2 things:\n    //                     - either I entirely skip this RfC proposal validation process/round, and on a very simplified set of assumptions (about participants, \n    //                     from errors to malevolent behaviors, and about decentralized coordination), and I go straight to RfC to be minted (which will also \n    //                     imply that investors are comitting the same amount - or that kind of simplification);\n    //                     - or I ignore the private/zk-proof-commit/secret required for the mechanims to actually work in the wild (and not be gamed by CPs observing \n    //                     investors transactions and same for investors). In this case I just keep the quadratic voting + the auction (described above) implementation.\n    //                         => it would remain an interesting challenge for me...\n\n    //                 => further elaborating on the auction structure for the CPs: I would choose a reverse Vickerey auction, also called \"second-price auctions\",\n    //                 because that would induce in the auction a configuration that makes CPs more careful about trying to accept at the lowest possible value\n    //                 a commit to RfC. Why? Because, in the end it is in the overall interest to have a Content DELIVERED, and one of the thing that could happen\n    //                 is to have CPs to be incentivized at the proposal moment to accept low funding resulting in low quality of content or excessive rate\n    //                 of undeilvered contents. So second lowest commit will win. \n\n    // **/\n\n    // function getRfCStatus(RfCId) public view returns(bool) {\n    //     _RfCStatus(RfCId);\n    // }\n    // function depositForRfCCPValidation() public payable {\n\n    // }\n\n    // //an authorization function that makes users accepting the protocol to use their funds => handled through metamask and web3.js => check if one exists in\n    // // ERC1155 standard\n    // function userProtocolFundsAllowance(address _account, uint _amount) public {\n        \n    //     //user allows protocol to use their deposit amount\n    //     userProtocolWithdrawAuthorization[_account] = true;\n\n    //     emit ProtocolAllowed(_account, balance[_account]);\n    // }\n\n    // //withdraw their funds\n\n    // //in case those funds were allocated to an RfC that did not pass the proposition phase (under this layer, so you can ignore this logic in this contract\n    // //   - as the funds are always pooled, it eventually always imply an NFT tracking the pool share of an account (and possibly under the hood \n    // // the cToken interactions, etc. - but abstracted away from this contract):\n    \n    // /**\n    // function withdrawFromEscrow(address _account, uint256 _amount) external {\n    //     require(= msg.sender, \"Must own token to claim underlying Eth\");\n\n    //     (uint256 amount, uint256 matureTime) = escrowNFT.tokenDetails(_tokenId);\n    //     require(matureTime <= block.timestamp, \"Escrow period not expired.\");\n\n    //     escrowNFT.burn(_tokenId);\n\n    //     (bool success, ) = msg.sender.call{value: amount}(\"\");\n\n    //     require(success, \"Transfer failed.\");\n\n    //     emit Redeemed(msg.sender, amount);\n    // }\n\n    // **/\n\n    // // a protocol authorization previous to any withdraw (above function) to be successfull\n    // //      require(unlock) \n    // //      require(time >= maturationTime)\n    // //      require(_amount <= balance[msg.sender])\n\n    // //ROLE AUTHORIZATION TBD: withraw funds for the protocol FundsManager core contracts \n    // // => specifically its address and no one else (no other ethereum account)\n    // // should be able to withdraw those funds\n\n    // //recieve funds from the Protocol:\n\n    // //functions to read (get()) the balances of the different accounts interacting with this contract, and this contract's balance\n\n\n    // //function giving contract addresses from this contract (used mainly for frontend interaction and debug/tests) => I'll see if I add a way to get\n    // // other core protocol contract addresses\n    // function contractAddress() public view returns (address) {\n    //     return address(this);\n    // }\n\n  \n}",
  "sourcePath": "/home/w31rdm4ch1n3s/ConsenSys_dev_bootcamp/final_project/tests_repo_consensys_final_project/contracts/InvestorEscrow.sol",
  "ast": {
    "absolutePath": "project:/contracts/InvestorEscrow.sol",
    "exportedSymbols": {
      "InvestorsEscrow": [
        122
      ]
    },
    "id": 123,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "294:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "InvestorsEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122
        ],
        "name": "InvestorsEscrow",
        "nameLocation": "457:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "12580d80",
            "id": 4,
            "mutability": "immutable",
            "name": "MIN_ESCROW_TIME",
            "nameLocation": "1900:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "1875:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1875:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1918:7:0",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "RfCId",
            "nameLocation": "2033:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2025:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2025:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "37a6d42b",
            "id": 8,
            "mutability": "mutable",
            "name": "participant",
            "nameLocation": "2314:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2299:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2299:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 14,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "2509:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2457:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2465:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2457:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 12,
                "keyType": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2484:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2476:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 11,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2495:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3d670d7",
            "id": 18,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "2561:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2525:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2534:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2525:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2545:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6dfc205",
            "id": 22,
            "mutability": "mutable",
            "name": "balanceInvestorsPool",
            "nameLocation": "2872:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2836:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2845:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2836:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2856:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "investorFundsPooled",
            "nameLocation": "2907:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2899:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2899:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "investorPoolShare",
            "nameLocation": "2941:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2933:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2933:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "PoolId",
            "nameLocation": "2973:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2965:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2965:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "aa8c217c",
            "id": 30,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "3064:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "3049:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3049:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cee2a9cf",
            "id": 34,
            "mutability": "mutable",
            "name": "isInvestor",
            "nameLocation": "3110:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "3077:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3086:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3077:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 32,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3097:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "InvestorsEscrow.RfCBalance",
            "id": 41,
            "members": [
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "RfCId",
                "nameLocation": "3203:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "3195:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3195:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "amountRfC",
                "nameLocation": "3227:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "3219:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3219:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "time",
                "nameLocation": "3254:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "3246:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3246:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RfCBalance",
            "nameLocation": "3174:10:0",
            "nodeType": "StructDefinition",
            "scope": 122,
            "src": "3167:187:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73eb21c5",
            "id": 43,
            "mutability": "mutable",
            "name": "rfcId",
            "nameLocation": "3825:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "3810:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3810:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49ef18f8",
            "id": 47,
            "mutability": "mutable",
            "name": "userHasADeposit",
            "nameLocation": "4335:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "4302:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4311:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4302:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 45,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4322:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46ed3735",
            "id": 51,
            "mutability": "mutable",
            "name": "userProtocolWithdrawAuthorization",
            "nameLocation": "4474:33:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "4441:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 48,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4441:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 49,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4461:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a11f2bb6",
            "id": 55,
            "mutability": "mutable",
            "name": "protocolUserWithdrawAuthorization",
            "nameLocation": "4965:33:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "4932:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4941:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4932:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 53,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4952:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 61,
            "name": "Deposit",
            "nameLocation": "5025:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5049:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "5033:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5061:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "5056:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5056:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5032:36:0"
            },
            "src": "5019:50:0"
          },
          {
            "anonymous": false,
            "id": 71,
            "name": "Escrowed",
            "nameLocation": "5080:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5097:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5089:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5112:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5104:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5125:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5117:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_matureTime",
                  "nameLocation": "5142:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5134:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:66:0"
            },
            "src": "5074:81:0"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "ProtocolAllowed",
            "nameLocation": "5167:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "allowanceUserValidation",
                  "nameLocation": "5196:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "5183:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5183:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountDAI",
                  "nameLocation": "5226:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "5221:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5182:54:0"
            },
            "src": "5161:76:0"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "Initialized",
            "nameLocation": "5249:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_mintedRfC",
                  "nameLocation": "5269:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "5261:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5260:20:0"
            },
            "src": "5243:38:0"
          },
          {
            "anonymous": false,
            "id": 89,
            "name": "DepositForProposal",
            "nameLocation": "5293:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "5320:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "5312:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5312:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "5339:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "5331:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5331:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rfc",
                  "nameLocation": "5359:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "5351:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5311:52:0"
            },
            "src": "5287:77:0"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "6058:629:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 93,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "6274:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 96,
                          "indexExpression": {
                            "expression": {
                              "id": 94,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6282:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6282:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6274:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 97,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6297:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6297:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6274:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7573657220646f65736e2774206861766520656d6f7567682066756e6473203d3e20726576657274",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6308:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21",
                          "typeString": "literal_string \"user doesn't have emough funds => revert\""
                        },
                        "value": "user doesn't have emough funds => revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21",
                          "typeString": "literal_string \"user doesn't have emough funds => revert\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6266:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:85:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 103,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "6362:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6378:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InvestorsEscrow_$122",
                              "typeString": "contract InvestorsEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InvestorsEscrow_$122",
                              "typeString": "contract InvestorsEscrow"
                            }
                          ],
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6370:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6370:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6370:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6362:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 109,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6388:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6388:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6362:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6574:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6574:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6586:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6586:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 113,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6566:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "6561:35:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "6033:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6040:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6058:0:0"
            },
            "scope": 122,
            "src": "6024:663:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 123,
        "src": "448:17726:0",
        "usedErrors": []
      }
    ],
    "src": "294:17880:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/InvestorEscrow.sol",
    "exportedSymbols": {
      "InvestorsEscrow": [
        122
      ]
    },
    "id": 123,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "294:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "InvestorsEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122
        ],
        "name": "InvestorsEscrow",
        "nameLocation": "457:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "12580d80",
            "id": 4,
            "mutability": "immutable",
            "name": "MIN_ESCROW_TIME",
            "nameLocation": "1900:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "1875:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1875:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1918:7:0",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "RfCId",
            "nameLocation": "2033:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2025:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2025:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "37a6d42b",
            "id": 8,
            "mutability": "mutable",
            "name": "participant",
            "nameLocation": "2314:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2299:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2299:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 14,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "2509:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2457:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2465:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2457:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 12,
                "keyType": {
                  "id": 10,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2484:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2476:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 11,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2495:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3d670d7",
            "id": 18,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "2561:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2525:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2534:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2525:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2545:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6dfc205",
            "id": 22,
            "mutability": "mutable",
            "name": "balanceInvestorsPool",
            "nameLocation": "2872:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2836:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2845:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2836:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2856:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "investorFundsPooled",
            "nameLocation": "2907:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2899:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2899:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "investorPoolShare",
            "nameLocation": "2941:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2933:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2933:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "PoolId",
            "nameLocation": "2973:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "2965:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2965:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "aa8c217c",
            "id": 30,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "3064:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "3049:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3049:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cee2a9cf",
            "id": 34,
            "mutability": "mutable",
            "name": "isInvestor",
            "nameLocation": "3110:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "3077:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3086:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3077:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 32,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3097:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "InvestorsEscrow.RfCBalance",
            "id": 41,
            "members": [
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "RfCId",
                "nameLocation": "3203:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "3195:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3195:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "amountRfC",
                "nameLocation": "3227:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "3219:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3219:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "time",
                "nameLocation": "3254:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 41,
                "src": "3246:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3246:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RfCBalance",
            "nameLocation": "3174:10:0",
            "nodeType": "StructDefinition",
            "scope": 122,
            "src": "3167:187:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73eb21c5",
            "id": 43,
            "mutability": "mutable",
            "name": "rfcId",
            "nameLocation": "3825:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "3810:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3810:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "49ef18f8",
            "id": 47,
            "mutability": "mutable",
            "name": "userHasADeposit",
            "nameLocation": "4335:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "4302:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4311:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4302:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 45,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4322:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46ed3735",
            "id": 51,
            "mutability": "mutable",
            "name": "userProtocolWithdrawAuthorization",
            "nameLocation": "4474:33:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "4441:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 48,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4441:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 49,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4461:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a11f2bb6",
            "id": 55,
            "mutability": "mutable",
            "name": "protocolUserWithdrawAuthorization",
            "nameLocation": "4965:33:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "4932:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4941:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4932:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 53,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4952:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 61,
            "name": "Deposit",
            "nameLocation": "5025:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5049:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "5033:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5061:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "5056:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5056:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5032:36:0"
            },
            "src": "5019:50:0"
          },
          {
            "anonymous": false,
            "id": 71,
            "name": "Escrowed",
            "nameLocation": "5080:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5097:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5089:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5112:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5104:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5125:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5117:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_matureTime",
                  "nameLocation": "5142:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "5134:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:66:0"
            },
            "src": "5074:81:0"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "ProtocolAllowed",
            "nameLocation": "5167:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "allowanceUserValidation",
                  "nameLocation": "5196:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "5183:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5183:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountDAI",
                  "nameLocation": "5226:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "5221:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5182:54:0"
            },
            "src": "5161:76:0"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "Initialized",
            "nameLocation": "5249:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_mintedRfC",
                  "nameLocation": "5269:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "5261:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5260:20:0"
            },
            "src": "5243:38:0"
          },
          {
            "anonymous": false,
            "id": 89,
            "name": "DepositForProposal",
            "nameLocation": "5293:18:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "5320:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "5312:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5312:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "5339:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "5331:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5331:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rfc",
                  "nameLocation": "5359:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "5351:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5311:52:0"
            },
            "src": "5287:77:0"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "6058:629:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 93,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "6274:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 96,
                          "indexExpression": {
                            "expression": {
                              "id": 94,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6282:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6282:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6274:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 97,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6297:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6297:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6274:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7573657220646f65736e2774206861766520656d6f7567682066756e6473203d3e20726576657274",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6308:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21",
                          "typeString": "literal_string \"user doesn't have emough funds => revert\""
                        },
                        "value": "user doesn't have emough funds => revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d5b10f88013780e53e591d9cede423b5aa9069a6fff2a54eb22b5be14a6bc21",
                          "typeString": "literal_string \"user doesn't have emough funds => revert\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6266:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:85:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 103,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "6362:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6378:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InvestorsEscrow_$122",
                              "typeString": "contract InvestorsEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InvestorsEscrow_$122",
                              "typeString": "contract InvestorsEscrow"
                            }
                          ],
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6370:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 104,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6370:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6370:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6362:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 109,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6388:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6388:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6362:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6574:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6574:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6586:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6586:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 113,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "6566:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6566:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "6561:35:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "6033:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6040:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6058:0:0"
            },
            "scope": 122,
            "src": "6024:663:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 123,
        "src": "448:17726:0",
        "usedErrors": []
      }
    ],
    "src": "294:17880:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-20T19:51:18.631Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}